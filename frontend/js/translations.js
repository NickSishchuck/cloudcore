export const translations = {
    en: {
        // Header
        signOut: 'Sign Out',
        
        // Sidebar
        new: 'New',
        uploadFiles: 'Upload Files',
        uploadFolder: 'Upload Folder',
        myDrive: 'My Drive',
        recent: 'Recent',
        shared: 'Shared with me',
        trash: 'Trash',
        
        // File operations
        name: 'Name',
        modified: 'Modified',
        created: 'Created',
        size: 'Size',
        downloadFile: 'Download',
        downloadFolder: 'Download folder',
        rename: 'Rename',
        delete: 'Delete',
        deleteFile: 'Delete file',
        deleteFolder: 'Delete folder',
        restore: 'Restore',
        deletePermanently: 'Delete permanently',
        
        // Messages
        loading: 'Loading...',
        calculating: 'Calculating...',
        emptyFolder: 'This folder is empty',
        uploadGetStarted: 'Upload files or create folders to get started',
        restoring: 'Restoring',
        restored: 'restored',
        renaming: 'Renaming',
        renamed: 'Renamed to',
        deleting: 'Deleting',
        deleted: 'deleted',
        failedRename: 'Failed to rename',
        failedDelete: 'Failed to delete',
        creatingArchive: 'Creating archive',
        
        // Auth
        username: 'Username',
        password: 'Password',
        emailAddress: 'Email Address',
        confirmPassword: 'Confirm Password',
        signIn: 'Sign In',
        signingIn: 'Signing in...',
        createAccount: 'Create Account',
        creatingAccount: 'Creating account...',
        noAccount: "Don't have an account?",
        alreadyAccount: 'Already have an account?',
        welcomeBack: 'Welcome back, {username}!',
        accountCreated: 'Account created! Welcome, {username}!',
        
        // Errors and notifications
        downloading: 'Downloading',
        downloaded: 'Downloaded',
        failedDownload: 'Failed to download',
        uploadFailed: 'Upload failed',
        invalidCredentials: 'Invalid username or password',
        signInFailed: 'Sign in failed',
        registrationFailed: 'Registration failed. Please try again.',
        passwordsNoMatch: 'Passwords do not match'
    },
    uk: {
        // Header
        signOut: '–í–∏–π—Ç–∏',
        
        // Sidebar
        new: '–°—Ç–≤–æ—Ä–∏—Ç–∏',
        uploadFiles: '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª–∏',
        uploadFolder: '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–∞–ø–∫—É',
        myDrive: '–ú—ñ–π –¥–∏—Å–∫',
        recent: '–û—Å—Ç–∞–Ω–Ω—ñ',
        shared: '–ù–∞–¥–∞–Ω—ñ –º–µ–Ω—ñ',
        trash: '–ö–æ—à–∏–∫',
        
        // File operations
        name: '–ù–∞–∑–≤–∞',
        modified: '–ó–º—ñ–Ω–µ–Ω–æ',
        created: '–°—Ç–≤–æ—Ä–µ–Ω–æ',
        size: '–†–æ–∑–º—ñ—Ä',
        downloadFile: '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏',
        downloadFolder: '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –ø–∞–ø–∫—É',
        rename: '–ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞—Ç–∏',
        delete: '–í–∏–¥–∞–ª–∏—Ç–∏',
        deleteFile: '–í–∏–¥–∞–ª–∏—Ç–∏ —Ñ–∞–π–ª',
        deleteFolder: '–í–∏–¥–∞–ª–∏—Ç–∏ –ø–∞–ø–∫—É',
        restore: '–í—ñ–¥–Ω–æ–≤–∏—Ç–∏',
        deletePermanently: '–í–∏–¥–∞–ª–∏—Ç–∏ –Ω–∞–∑–∞–≤–∂–¥–∏',
        
        // Messages
        loading: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...',
        calculating: '–û–±—á–∏—Å–ª–µ–Ω–Ω—è...',
        emptyFolder: '–¶—è –ø–∞–ø–∫–∞ –ø–æ—Ä–æ–∂–Ω—è',
        uploadGetStarted: '–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª–∏ –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –ø–∞–ø–∫–∏',
        restoring: '–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è',
        restored: '–≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–æ',
        renaming: '–ü–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è',
        renamed: '–ü–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–æ –Ω–∞',
        deleting: '–í–∏–¥–∞–ª–µ–Ω–Ω—è',
        deleted: '–≤–∏–¥–∞–ª–µ–Ω–æ',
        failedRename: '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞—Ç–∏',
        failedDelete: '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏',
        creatingArchive: '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∞—Ä—Ö—ñ–≤—É',
        
        // Auth
        username: '–Ü–º\'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞',
        password: '–ü–∞—Ä–æ–ª—å',
        emailAddress: '–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –∞–¥—Ä–µ—Å–∞',
        confirmPassword: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø–∞—Ä–æ–ª—å',
        signIn: '–£–≤—ñ–π—Ç–∏',
        signingIn: '–í—Ö—ñ–¥...',
        createAccount: '–°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å',
        creatingAccount: '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É...',
        noAccount: '–ù–µ–º–∞—î –æ–±–ª—ñ–∫–æ–≤–æ–≥–æ –∑–∞–ø–∏—Å—É?',
        alreadyAccount: '–í–∂–µ –º–∞—î—Ç–µ –æ–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å?',
        welcomeBack: '–ó –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è–º, {username}!',
        accountCreated: '–û–±–ª—ñ–∫–æ–≤–∏–π –∑–∞–ø–∏—Å —Å—Ç–≤–æ—Ä–µ–Ω–æ! –í—ñ—Ç–∞—î–º–æ, {username}!',
        
        // Errors and notifications
        downloading: '–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è',
        downloaded: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ',
        failedDownload: '–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏',
        uploadFailed: '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
        invalidCredentials: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ —ñ–º\'—è –∞–±–æ –ø–∞—Ä–æ–ª—å',
        signInFailed: '–ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É',
        registrationFailed: '–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.',
        passwordsNoMatch: '–ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è'
    }
};

export class I18n {
    constructor() {
        this.currentLanguage = localStorage.getItem('cloudcore-language') || 'en';
    }

    t(key) {
        return translations[this.currentLanguage]?.[key] || key;
    }

    switchLanguage() {
        this.currentLanguage = this.currentLanguage === 'en' ? 'uk' : 'en';
        localStorage.setItem('cloudcore-language', this.currentLanguage);
        this.updateUI();
    }

    updateUI() {
        document.querySelectorAll('[data-i18n]').forEach(element => {
            const key = element.getAttribute('data-i18n');
            const translation = translations[this.currentLanguage]?.[key];
            if (translation) {
                element.textContent = translation;
            }
        });
        
        this.updateLanguageButton();
    }

    updateLanguageButton() {
        const btn = document.getElementById('languageBtn');
        if (!btn) return;
        
        const flag = btn.querySelector('.language-flag');
        const code = btn.querySelector('.language-code');
        
        if (this.currentLanguage === 'uk') {
            flag.textContent = 'üá∫üá¶';
            code.textContent = 'UA';
            btn.title = '–ü–µ—Ä–µ–º–∫–Ω—É—Ç–∏ –º–æ–≤—É';
        } else {
            flag.textContent = 'üåê';
            code.textContent = 'EN';
            btn.title = 'Switch language';
        }
    }

    getCurrentLanguage() {
        return this.currentLanguage;
    }
}
