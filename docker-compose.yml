services:
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
      - "3443:443"
    volumes:
      - ./frontend/certs:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      args:
        RUN_TESTS: ${RUN_TESTS:-false} # Defaults to false, can override with env var
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - DB_HOST=database
      - DB_PORT=3306
      - DB_NAME=CloudCoreDB
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD:-defaultpassword}
      - FileStorage__BasePath=/app/storage
      - Email_Host=papercut
      - Email_Port=2525
      - Email_SenderEmail=papercut@test.com
      - Email_Sender=CloudCore
    volumes:
      - ./backend/storage:/app/storage
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network

  database:
    image: mysql:8.0
    environment:
      MYSQL_HOST: database
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-defaultpassword}
      MYSQL_DATABASE: CloudCoreDB
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
    networks:
      - app-network

  papercut:
    image: changemakerstudiosus/papercut-smtp:latest
    container_name: papercut
    ports:
      - "8080:8080"
      - "2525:2525"
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge

